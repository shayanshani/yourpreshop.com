@using Helper;
@model PreShop.FrontEnd.Helpers.CartHelper.CartHelper
<style>
    .cartSelectedSizeColor {
        text-transform: uppercase !important;
        display: inline-block !important;
        border: 1px solid #ddd !important;
        width: 25px !important;
        height: 25px !important;
        text-align: center !important;
        line-height: 25px !important;
        border-radius: 50% !important;
        font-size: 12px !important;
        font-weight: 600 !important;
    }
</style>
@{
    var items = Model.GetCartItems();
    if (items.Count() > 0)
    {
        <span class="cart_count">@items.Count()</span>
        <div class="mini_cart" style="height:450px;overflow-y:scroll">
            <div class="items_nunber">
                <span>@items.Count() Items in Cart</span>
            </div>
            <div class="cart_button checkout">
                <a href='@Url.Action("Index","CheckOut",new { v=Helper.Security.Encrypt("1") })'>Proceed to Checkout</a>
            </div>
            @foreach (var item in items)
            {
                <div class="cart_item">
                    <div class="cart_img">
                        <a href="#"><img onerror="this.src='/assets/img/product/product18.jpg'" src="@PreShop.Common.StoreHostName@item.ImageUrl" alt=""></a>
                    </div>
                    <div class="cart_info">
                        <a href="#">@item.Product</a>
                        <form>
                            @{
                                string unit = !item.Unit.IsNull() ? "/" + item.Unit : "";
                            }
                            <span>@Helper.SpartansHelper.FormatCurrencyDisplay(item.Price.ToString())@unit &nbsp; X &nbsp; @item.Qty</span>
                        </form>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="modal_size">
                                    <ul>
                                        @{
                                            string sizeO = null;
                                            if (!string.IsNullOrEmpty(item.Size))
                                            {
                                                sizeO = item.Size;
                                                if (sizeO.IndexOf(' ') > 0)
                                                {
                                                    sizeO = sizeO.Split(' ')[0];
                                                }
                                                <li><a class="SizeSelected cartSelectedSizeColor" title="@item.Size" href="javascript:void(0);">@sizeO</a></li>
                                            }
                                            if (!string.IsNullOrEmpty(item.ColorCode))
                                            {
                                                <li><a style="background-color:@item.ColorCode" class="ColorSelected cartSelectedSizeColor" href="javascript:void(0);">&nbsp;</a></li>
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                        </div>
                        <span style="float:right">Sub total = @Helper.SpartansHelper.FormatCurrencyDisplay(item.ItemTotal.ToString())</span>
                    </div>
                </div>
            }
            <span class="cart_subtotal pull-right" style="font-size:15px!important"><b>Total&nbsp;:&nbsp;@Helper.SpartansHelper.FormatCurrencyDisplay(items[0].SubTotal.ToString())</b></span>
            <div class="cart_button view_cart" style="padding-top: 40px!important;display:none">
                <a href="#">View and Edit Cart</a>
            </div>
        </div>
    }
    else
    {
        <span class="cart_count">0</span>
    }
}

